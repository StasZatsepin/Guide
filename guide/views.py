from django.shortcuts import render, get_object_or_404, redirect
from django.http import HttpResponse, JsonResponse
from django.core.paginator import Paginator
from django.contrib.auth.decorators import login_required
from django.contrib.auth import login
from django.contrib.auth.mixins import LoginRequiredMixin
from django.contrib import messages
from django.views.generic import UpdateView, DeleteView
from django.urls import reverse_lazy
from .models import Quote, GuidePost
from .forms import GuidePostForm, RegisterForm
from django.template.loader import render_to_string

# Главная страница: приветствие и описание
def index(request):
    return render(request, 'guide/index.html')

def about(request):
    return render(request, 'guide/about.html')

# Тестовые данные
quotes = [
    "Ты не пройдёшь!",
    "Бессмертные умирают. Великие падают.",
    "Маленькие люди меняют ход истории.",
    "Всё, что нам нужно решить — что делать со временем, которое нам отпущено.",
    "Волшебник никогда не опаздывает и не приходит раньше времени. Он появляется именно тогда, когда считает нужным.",
    "Летите, глупцы!",
    "Даже самый маленький человек способен изменить ход будущего.",
    "Я не скажу: не плачьте, ведь не все слёзы — зло.",
    "Мир не в твоих книгах и картах. Он — там, снаружи.",
    "Храни это в тайне. Храни это в безопасности.",
    "Есть только один Владыка Кольца, только он может подчинить его своей воле. И он не делится властью.",
    "Доска расставлена, фигуры движутся.",
    "Мужество теперь — твоя лучшая защита против надвигающейся бури.",
    "Смерть — это всего лишь ещё одна тропа, которую всем нам предстоит пройти.",
    "Путешествие на этом не заканчивается.",
    "Так бывает со всеми, кто живёт в такие времена, но не им решать.",
    "Многие, кто живёт, заслуживают смерти. А некоторые, кто умирает, заслуживают жизни.",
    "Я не помню этого места.",
    "У тебя только один выбор. Кольцо должно быть уничтожено.",
    "Не спеши раздавать смерть и судить других.",
    "Мудрые говорят только о том, что знают.",
    "Тот, кто разрушает вещь, чтобы узнать, что это такое, сошёл с пути мудрости.",
    "Я слуга Тайного Огня, владыка пламени Анора.",
    "Ты — носитель Кольца, Фродо. Нести Кольцо Власти — значит быть одному.",
    "Жалость Бильбо может решить судьбу многих.",
    "Мы должны присоединиться к нему, Гэндальф. Мы должны присоединиться к Саурону. Это было бы мудро, мой друг. — Скажи мне, 'друг', когда Саруман Мудрый отказался от разума ради безумия?",
    "Тебе придётся обойтись без носового платка и без многих других вещей, прежде чем ты дойдёшь до конца пути.",
    "Конец? Нет, путешествие на этом не заканчивается.",
    "Серый занавес этого мира отступает, и всё становится серебристым стеклом, а потом ты видишь это.",
    "Белые берега, и за ними — далёкая зелёная страна под стремительным восходом солнца.",
    "Волшебник никогда не опаздывает, Фродо Бэггинс. И не приходит раньше времени. Он появляется именно тогда, когда считает нужным.",
    "Я знал, что ты придёшь.",
    "Не все те, кто странствуют, заблудились.",
    "Путешествие в тысячу лиг начинается с одного шага.",
    "Мудрость приходит с опытом, а опыт — с путешествиями.",
    "В каждом сердце есть место для чуда.",
    "Свет можно найти даже в самой тёмной из ночей, если не забывать зажигать свечу.",
    "Время для храбрости приходит, когда кажется, что всё потеряно.",
    "Судьба мира решается не в залах власти, а в сердцах простых людей.",
    "Величие не в силе, а в доброте и сострадании.",
    "Иногда даже самый мудрый не может предсказать исход.",
    "Сомнения — это тень, которую рассеивает только действие.",
    "Истинная сила — в умении прощать.",
    "Тот, кто ищет приключений, всегда их найдёт.",
    "Верь в добро, даже если вокруг сгущается тьма."
]
roles = [
    {"title": "Волшебник", "desc": "Один из пяти Истари, посланных в Средиземье."},
    {"title": "Член Братства Кольца", "desc": "Вдохновлял и защищал героев на пути к Ородруину."},
    {"title": "Серый и Белый", "desc": "Преобразился из Гэндальфа Серого в Гэндальфа Белого после битвы с Балрогом."},
    {"title": "Советник королей", "desc": "Был советником Трандуила, Теодена, Арагорна и других правителей."},
    {"title": "Победитель Балрога", "desc": "Сразился с Балрогом в Мории и вышел победителем, переродившись."},
    {"title": "Друг хоббитов", "desc": "Особенно близок к Бильбо и Фродо, вдохновлял и защищал жителей Шира."},
    {"title": "Враг Саурона", "desc": "Один из главных противников Тьмы, разрушил планы Саурона и Сарумана."},
    {"title": "Путешественник и рассказчик", "desc": "Обошёл весь север Средиземья, знал множество историй и легенд."},
    {"title": "Вдохновитель надежды", "desc": "Всегда поддерживал веру в победу даже в самые тёмные времена."},
    {"title": "Великий стратег", "desc": "Организовал оборону Минас Тирита, участвовал в битвах за Рохан и Гондор."},
    {"title": "Воплощение мудрости", "desc": "Его советы и решения часто спасали жизни и меняли ход истории."},
    {"title": "Проводник в Валинор", "desc": "Сопровождал Фродо, Бильбо и эльфов в их последнем путешествии на Запад."}
]

def quotes_view(request):
    return render(request, 'guide/quotes.html', {'quotes': quotes, 'roles': roles})

# Страница постов: все опубликованные GuidePost, с фильтрацией по категориям и пагинацией
def posts_list(request):
    categories = GuidePost.CATEGORY_CHOICES
    category = request.GET.get('category')
    if category and category in dict(categories):
        posts = GuidePost.objects.filter(is_published=True, category=category).order_by('-created_at')  # type: ignore[attr-defined]
        current_category = dict(categories)[category]
    else:
        posts = GuidePost.objects.filter(is_published=True).order_by('-created_at')  # type: ignore[attr-defined]
        current_category = None
    paginator = Paginator(posts, 5)
    page_number = request.GET.get('page', 1)
    page_obj = paginator.get_page(page_number)
    context = {
        'categories': categories,
        'current_category': current_category,
        'page_obj': page_obj,
        'category': category,
    }
    if request.headers.get('x-requested-with') == 'XMLHttpRequest':
        html = render_to_string('guide/_posts_list_content.html', context, request=request)
        return HttpResponse(html)
    return render(request, 'guide/posts_list.html', context)

def post_detail(request, pk):
    """Детальный просмотр поста"""
    post = get_object_or_404(GuidePost, pk=pk, is_published=True)  # type: ignore[attr-defined]
    return render(request, 'guide/post_detail.html', {'post': post})

# Полный просмотр одной записи для главной страницы
def main_post_detail(request, pk):
    post = get_object_or_404(GuidePost, pk=pk, is_published=True)  # type: ignore[attr-defined]
    return render(request, 'guide/main_post_detail.html', {'post': post})

@login_required
def post_create(request):
    if request.method == 'POST':
        form = GuidePostForm(request.POST)
        if form.is_valid():
            post = form.save()
            messages.success(request, 'Запись успешно создана!')
            if request.headers.get('x-requested-with') == 'XMLHttpRequest':
                return JsonResponse({'success': True, 'message': 'Запись успешно добавлена!'})
            if post.is_published:
                return redirect('guide:post_detail', pk=post.pk)
            else:
                return redirect('guide:posts_list')
        else:
            if request.headers.get('x-requested-with') == 'XMLHttpRequest':
                return JsonResponse({'success': False, 'message': 'Проверьте правильность заполнения формы.'})
    else:
        form = GuidePostForm()
    return render(request, 'guide/post_form.html', {'form': form})

class PostUpdateView(LoginRequiredMixin, UpdateView):
    model = GuidePost
    form_class = GuidePostForm
    template_name = 'guide/post_form.html'
    
    def form_valid(self, form):
        self.object = form.save()
        if self.request.headers.get('x-requested-with') == 'XMLHttpRequest':
            return JsonResponse({'success': True, 'message': 'Запись успешно обновлена!'})
        messages.success(self.request, 'Запись успешно обновлена!')
        return super().form_valid(form)

    def form_invalid(self, form):
        if self.request.headers.get('x-requested-with') == 'XMLHttpRequest':
            return JsonResponse({'success': False, 'message': 'Проверьте правильность заполнения формы.'})
        return super().form_invalid(form)

    def get_success_url(self):
        return reverse_lazy('guide:post_detail', kwargs={'pk': self.object.pk})

class PostDeleteView(LoginRequiredMixin, DeleteView):
    model = GuidePost
    template_name = 'guide/post_confirm_delete.html'
    success_url = reverse_lazy('guide:index')
    
    def delete(self, request, *args, **kwargs):
        messages.success(request, 'Запись успешно удалена!')
        return super().delete(request, *args, **kwargs)

def register(request):
    if request.method == 'POST':
        form = RegisterForm(request.POST)
        if form.is_valid():
            user = form.save()
            login(request, user)
            return redirect('guide:index')
    else:
        form = RegisterForm()
    return render(request, 'guide/register.html', {'form': form})

def posts_by_category(request, category):
    """Посты по категории"""
    category_choices = dict(GuidePost.CATEGORY_CHOICES)
    if category not in category_choices:
        return render(request, 'guide/404.html', status=404)
    
    posts = GuidePost.objects.filter(
        category=category, 
        is_published=True
    )  # type: ignore[attr-defined]
    
    context = {
        'posts': posts,
        'category_name': category_choices[category],
        'category_slug': category
    }
    return render(request, 'guide/posts_by_category.html', context)

def routes(request):
    """Страница с маршрутами по Средиземью"""
    return render(request, 'guide/routes.html')

def route_detail(request, route_slug):
    routes = {
        'fellowship': {
            'title': 'Путь Братства Кольца',
            'story': (
                'Путь Братства Кольца — это эпическое и полное опасностей путешествие, начавшееся в Шире, где Фродо Бэггинс получил Кольцо Всевластья от своего дяди Бильбо. Вместе с верными друзьями Сэмом, Мерри и Пиппином он был вынужден покинуть родные края, скрываясь от преследующих их Назгул. На трактире в Бри они встретили загадочного Странника, который оказался Арагорном, наследником Исилдура. Под его защитой хоббиты добрались до Ривенделла, где Элронд собрал совет представителей всех свободных народов Средиземья. На этом совете было решено уничтожить Кольцо, и для этого было создано Братство Кольца, в которое вошли Фродо, Сэм, Мерри, Пиппин, Арагорн, Боромир, Гимли, Леголас и Гэндальф. Их путь лежал через заснеженные перевалы Карадраса, но непогода вынудила их искать другой путь — через древние подземелья Мории. Здесь Братство столкнулось с орками и Балрогом, и Гэндальф пожертвовал собой, чтобы спасти остальных. Оставшиеся члены Братства нашли приют в Лотлориэне у Галадриэль, где получили дары и мудрые советы. Продолжив путь по реке Андуин, герои оказались на перепутье: Боромир пал, защищая хоббитов, Мерри и Пиппин были захвачены орками, а Арагорн, Леголас и Гимли отправились их спасать. Фродо и Сэм, решив продолжить миссию вдвоём, отправились к Мордору, где к ним присоединился Голлум. Их путь пролегал через Эмин-Муил, Мёртвые топи и Черные Врата, которые оказались непроходимыми, поэтому им пришлось искать обход через опасные ущелья Кирит Унгол, где они столкнулись с чудовищной паучихой Шелобой. Преодолев все испытания, Фродо и Сэм добрались до самой Горы Судьбы в сердце Мордора, где Кольцо было уничтожено, а власть Саурона пала. Тем временем Арагорн, Леголас и Гимли участвовали в великих битвах за Рохан и Гондор, призвали армию мертвецов и сыграли решающую роль в победе на Пеленнорских полях и у Черных Врат. После победы герои вернулись в Шир, а затем Фродо, Бильбо, Гэндальф, Элронд и Галадриэль отплыли в Валинор, завершив эпоху Кольца.'
            ),
        },
        'thorin': {
            'title': 'Путь Торина и компании',
            'story': (
                'Путь Торина Дубощита и его компании начался в тихом Шире, где Бильбо Бэггинс неожиданно для себя стал участником великого приключения. Гномы, ведомые Торином, пригласили его в своё путешествие к Одинокой горе, чтобы вернуть утраченное королевство и сокровища, захваченные драконом Смаугом. Их путь пролегал через Бри, где они впервые столкнулись с опасностями, а затем через Ривенделл, где Элронд помог расшифровать древние руны на карте, указывающие путь к тайной двери Эребора. В Мглистых горах компанию захватили гоблины, и именно там Бильбо встретил Голлума и обрёл Кольцо, которое сыграет огромную роль в судьбе Средиземья. После побега из пещер герои были спасены орлами и нашли приют у Беорна, мудрого оборотня. Далее их ждал Мглистый лес, полный опасностей: гигантские пауки и эльфы взяли их в плен, но благодаря находчивости Бильбо и волшебному Кольцу все были спасены и сбежали из дворца эльфов в бочках по реке. Добравшись до Озёрного города, они получили помощь от местных жителей и отправились к Одинокой горе. С помощью подсказок на карте и ключа Торина им удалось найти тайную дверь и проникнуть внутрь Эребора. Бильбо первым встретился со Смаугом, разозлил дракона, и тот напал на Озёрный город, где был убит Бардом. После гибели Смауга вокруг сокровищ Эребора разгорелась Битва Пяти Воинств, в которой сошлись гномы, эльфы, люди, орки и варги. Торин пал в бою, но благодаря его жертве и храбрости его друзей королевство гномов было восстановлено, а Бильбо вернулся домой, навсегда изменённый этим путешествием.'
            ),
        },
        'aragorn': {
            'title': 'Путь Арагорна к Умбару',
            'story': (
                'Путь Арагорна к Умбару был полон решимости и мужества. После победы в битве при Хорнбурге Арагорн, Леголас и Гимли отправились по древнему Пути Мёртвых, чтобы призвать на помощь армию мертвецов, связанных клятвой с королём Гондора. Преодолев страх и испытания, они прошли через Эдорас и достигли Пеларгира, где разбили флот Саурона и освободили корабли, необходимые для спасения Гондора. С армией мертвецов Арагорн отправился в Умбар, уничтожил пиратов и поспешил на помощь осаждённому Минас Тириту. Его прибытие на кораблях стало переломным моментом в битве на Пеленнорских полях. После победы Арагорн повёл войска к Черным Вратам Мордора, чтобы отвлечь внимание Саурона и дать Фродо шанс уничтожить Кольцо. После окончательной победы над Сауроном Арагорн был коронован как король Гондора и Арнора, женился на Арвен и начал новую эпоху мира и процветания в Средиземье.'
            ),
        },
        'elves': {
            'title': 'Путь эльфов на Запад',
            'story': (
                'Путь эльфов на Запад — это древний и торжественный исход, символизирующий завершение эпохи эльфов в Средиземье. После долгих лет борьбы и утрат Галадриэль, Элронд и другие великие эльфы, а также Фродо и Бильбо, собравшись в Ривенделле и Шире, отправились в своё последнее путешествие. Их путь пролегал через земли Эриадора к Серым Гаваням, где их ждал белый корабль. Здесь, на берегу, они простились с друзьями и отплыли в Валинор — бессмертные земли за пределами мира людей. Это путешествие стало не только прощанием с родиной, но и началом новой эры, когда эльфы, маги и избранные смертные покидали Средиземье, уступая место Четвёртой эпохе и господству людей.'
            ),
        },
    }
    route = routes.get(route_slug)
    if not route:
        return render(request, 'guide/404.html', status=404)
    return render(request, 'guide/route_detail.html', {'route': route})